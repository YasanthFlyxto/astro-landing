---
//@ts-nocheck
interface Props {}
import { Player, Controls } from "@lottiefiles/react-lottie-player";
import { motion } from "framer-motion";
import AnimatedImages from "./AnimatedImages";

const {} = Astro.props;
---

<div class="">
  <div class="relative isolate bg-[#FAFCFF] overflow-hidden">
    <div class="mx-auto max-w-7xl mt-12 sm:pt-24 pt-24 pb-32">
      <p class="lg:block hidden text-8xl text-center text-blue-900">
        Your Creative<span class="text-blue-500"> Best Friend.</span>
      </p>
      <p class="lg:text-8xl lg:hidden text-5xl text-center text-blue-900">
        Your Creative<br /><span class="text-5xl text-blue-500">
          Best Friend.</span
        >
      </p>

      <div class="flex justify-center mt-32">
        <video class="sm:w-[500px] w-60" src="/action3.mp4" autoplay loop muted width="500px"></video>
      </div>
      <div class="sm:hidden block">
        <AnimatedImages client:load />
      </div>
      <p
        class="text-center sm:mt-24 mt-40 lg:text-2xl text-lg justify-center gap-2 flex lg:gap-5 text-blue-900"
      >
        Think<span class="text-blue-500">•</span>Design<span
          class="text-blue-500">•</span
        >Produce<span class="text-blue-500">•</span>Animate
      </p>
      <div class="sm:block hidden">
        <AnimatedImages client:load />
      </div>
    </div>

    <!-- <div
      class="mx-auto max-w-7xl pb-24 pt-10 sm:pb-32 lg:grid lg:grid-cols-2 lg:gap-x-8 lg:px-8 lg:pb-40"
    >
      <div class="px-6 lg:px-0 lg:pt-4">
        <div class="mx-auto max-w-2xl">
          <div class="max-w-lg">
            <div class="mt-24 sm:mt-32 lg:mt-16">
              <a href="#" class="inline-flex space-x-6">
                <span
                  class="rounded-full bg-black/80 px-3 py-1 text-sm font-semibold leading-6 text-white ring-1 ring-inset ring-black"
                  >What's new</span
                >
                <span
                  class="inline-flex items-center space-x-2 text-sm font-medium leading-6 text-gray-600"
                >
                  <span>Github repo</span>
                  <svg
                    class="h-5 w-5 text-gray-400"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </span>
              </a>
            </div>
            <h1
              class="mt-10 text-4xl font-roboto tracking-tight text-blue-900 sm:text-6xl"
            >
              Why Fly Studios ?
            </h1>
            <p class="mt-6 text-lg text-blue-900">
              Partnering with us brings an array of substantial advantages.
              Unlock unparalleled benefits for your business collaboration with
              our esteemed services.
            </p>
            <div class="mt-10 flex items-center gap-x-6">
              <a
                href="#"
                class="rounded-md bg-white border border-black px-3.5 py-2.5 text-sm font-semibold text-black shadow-sm hover:bg-black hover:text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2"
              >
                Signup
              </a>
              <a
                href="https://github.com/eavinti/astro-landing"
                class="text-sm font-semibold leading-6 text-gray-900"
                >Get the code<span aria-hidden="true">→</span></a
              >
            </div>
          </div>
        </div>
      </div>

      <div
        class="mt-20 px-1 sm:mt-24 md:mx-auto md:max-w-2xl lg:mx-0 lg:mt-0 lg:w-screen relative"
      >
        <img
          id="image"
          class="rounded-xl top-0 left-0 w-full h-auto opacity-0 transition-opacity duration-1000 ease-in-out"
          src="https://uploads-ssl.webflow.com/5ea7fd4e3d52ef73804bc877/640942c2de5aef189fead7de_Screenshot-min-3.png"
        />
        <div class="absolute top-0 right-0 rounded-bl-xl p-6 bg-gray-50">
          <svg
            class="h-2 w-2 inline fill-black mr-2"
            viewBox="0 0 6 6"
            aria-hidden="true"
          >
            <circle cx="3" cy="3" r="3"></circle>
          </svg>
          <svg
            class="h-2 w-2 inline fill-gray-300 mr-2"
            viewBox="0 0 6 6"
            aria-hidden="true"
          >
            <circle cx="3" cy="3" r="3"></circle>
          </svg>
          <svg
            class="h-2 w-2 inline fill-gray-300 mr-2"
            viewBox="0 0 6 6"
            aria-hidden="true"
          >
            <circle cx="3" cy="3" r="3"></circle>
          </svg>
        </div>

        <div
          class="absolute bottom-0 right-0 rounded-full m-6 pl-1 pr-4 py-1 bg-black bg-opacity-75 flex items-center"
        >
          <img
            class="inline mr-2 h-9 w-9 rounded-full"
            src="./avatar.jpeg"
            alt=""
          />
          <div class="flex flex-col">
            <span class="text-white text-sm font-roboto">Edgar Alejandro</span>
            <span class="text-gray-200 text-xs font-nunito"
              >Software developer</span
            >
          </div>
        </div>
      </div>
    </div>
    <div
      class="absolute inset-x-0 bottom-0 -z-10 h-24 bg-gradient-to-t from-white sm:h-32"
    >
    </div>
  </div> -->
  </div>

  <script type="module" client:load>
    const images = [
      "https://uploads-ssl.webflow.com/5ea7fd4e3d52ef73804bc877/640942c2de5aef189fead7de_Screenshot-min-3.png",
      "https://uploads-ssl.webflow.com/5ea7fd4e3d52ef73804bc877/63f2acd1cdf34e09cfb7e39e_Screenshot-min-4.png",
      "https://uploads-ssl.webflow.com/5ea7fd4e3d52ef73804bc877/63f1a16ac16726b1e653e8ca_Screenshot-min.png",
      // Add more URLs as needed
    ];
    let currentIndex = 0;
    const imageElement = document.getElementById("image");

    // Initially, set the image opacity to 100 to ensure it is visible
    imageElement.classList.remove("opacity-0");

    function changeImage() {
      // Add opacity class 0 to make the current image transparent
      imageElement.classList.add("opacity-0");

      setTimeout(() => {
        currentIndex++;
        if (currentIndex >= images.length) {
          currentIndex = 0;
        }
        imageElement.src = images[currentIndex];
        // Wait for the image to load before making it visible
        imageElement.onload = () => {
          imageElement.classList.remove("opacity-0"); // Make the new image visible
        };
      }, 1000); // This time should match the duration of the opacity transition
    }

    // Starts image transition every 4 seconds (includes 1 second for transition duration)
    setInterval(changeImage, 4000);
  </script>
</div>
